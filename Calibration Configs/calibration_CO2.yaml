substitutions:
  # names
  name: "aquapi"
  friendly_name: "AquaPi"

  # App Version - Updated: 8/2023
  appVersion: "0.1c"

  # pins
  sdaPin: "21"
  sclPin: "22"
  
  # EZO Circuit Addresses
  # CO2 circuit, who's address is 105
  addCO2: "105"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  # Automatically add the mac address to the name
  name_add_mac_suffix: true
  project:
    name: TheRealFalseReality.aquapi
    version: "${appVersion}"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: verbose

# Enable Home Assistant API
api:

ota:

wifi:
  ap:

captive_portal:

web_server:

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none
  
improv_serial:

# i2c Pins
i2c:
  sda: ${sdaPin}
  scl: ${sclPin}
  scan: true
  id: bus_a

# Internal Blue LED
light:
  - platform: status_led
    # name: "Internal LED"
    pin: GPIO2
    id: internal_led
    # entity_category: "Config"

sensor:
  # EZO Circuit - EC
  # Conductivity
  - platform: ezo
    icon: mdi:shaker-outline
    name: "Conductivity"
    id: co2_ezo
    address: 102
    unit_of_measurement: ""
    accuracy_decimals: 2
    update_interval: 2s
    state_class: "measurement"

button:
  # Calibrate the temp probe to 3900 ppm
  - platform: template
    name: "CO2 - Calibration - 3900"
    id: co2_cal_3900
    on_press:
      then:
        - lambda: |-
            id(co2_ezo).send_custom("cal,3900");

  # Calibrate the temp probe to 0 ppm
  - platform: template
    name: "CO2 - Calibration - 0"
    id: co2_cal_0
    on_press:
      then:
        - lambda: |-
            id(co2_ezo).send_custom("cal,0");

  # Perform Calibration CLEAR
  - platform: template
    name: "CO2 - Calibration Clear"
    id: co2_cal_clear
    on_press:
      then:
        - lambda: |-
            id(co2_ezo).clear_calibration();

  # Perform Calibration Check
  - platform: template
    name: "CO2 - Calibration - check"
    id: co2_cal_check
    on_press:
      then:
        - lambda: |-
            id(co2_ezo).get_calibration();

  # Perform Status Check
  - platform: template
    name: "CO2 - Staus Check"
    id: co2_status
    on_press:
      then:
        - lambda: |-
            id(co2_ezo).send_custom("Status");

  # Get Device Firmware Version
  - platform: template
    name: "CO2 - Get Information"
    id: co2_info
    on_press:
      then:
        - lambda: |-
            id(co2_ezo).get_device_information();

  # Manual Read
  - platform: template
    name: "CO2 - Manual Read"
    id: co2_read
    on_press:
      then:
        - lambda: |-
            id(co2_ezo).get_state();
