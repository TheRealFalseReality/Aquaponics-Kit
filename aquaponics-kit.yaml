substitutions:
  # names
  name: "aquaponics-kit"
  friendly_name: "Aquaponics Kit"

  # App Version - Updated: 6/2023
  appVersion: "1.01"

  # pins
  sdaPin: "23"
  sclPin: "22"

  # EZO Circuit Addresses
  # pH circuit, who's address is 99
  addPH: "99"
  # EC circuit, who's address is 100
  addEC: "100"
  # DO circuit, who's address is 97
  addDO: "97"
  # RTD circuit, who's address is 102
  addRTD: "102"
  # PMP circuit, who's address is 103
  addPMP: "103"
  # HUM circuit, who's address is 111
  addHUM: "111"
  # CO2 circuit, who's address is 105
  addCO2: "105"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  # Automatically add the mac address to the name
  # name_add_mac_suffix: true
  project:
    name: TheRealFalseReality.Aquaponics-Kit
    version: "${appVersion}"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: verbose

# Enable Home Assistant API
api:
  encryption:
    key: "WFa4tOesiN1m6fKdzMIaj9EBTbHyUl03D2RwxhFd1jQ="

ota:
  password: "24a14d7afe18b00617ef0e52f507a1c1"

# dashboard_import:
#   package_import_url: github://TheRealFalseReality/**TODO**@main
#   # import_full_config: true

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    password: "password"

captive_portal:

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none
  
improv_serial:

# i2c Pins
i2c:
  sda: ${sdaPin}
  scl: ${sclPin}
  scan: true
  id: bus_a

sensor:
  # Internal Magnetic Sensor
  - platform: esp32_hall
    name: "ESP32 Hall Sensor"
    update_interval: 60s
    entity_category: "diagnostic"

  # Internal Temp.
  - platform: internal_temperature
    name: "Internal Temperature"

  # Wifi Signal 
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  # Wifi %
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"

  # Uptime sensor
  - platform: uptime
    name: Uptime

  # Absolute Humidity
  - platform: absolute_humidity
    name: "Absolute Humidity"
    temperature: temp_ezo
    humidity: hum_ezo
    
  # EZO Circuit - pH
  - platform: ezo
    icon: mdi:ph
    name: "pH"
    id: ph_ezo
    address: ${addPH}
    unit_of_measurement: ""
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"

  # EZO Circuit - EC
  # Salinity
  - platform: ezo
    icon: mdi:shaker-outline
    name: "Salinity"
    id: ec_ezo
    address: ${addEC}
    unit_of_measurement: "ppt"
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"

  # Specific Gravity
  - platform: copy 
    source_id: ec_ezo
    name: "Specific Gravity"
    filters:
      - lambda: return x;
    unit_of_measurement: ""
    accuracy_decimals: 3
    state_class: "measurement"

  # # Conductivity
  # - platform: copy 
  #   source_id: ec_ezo
  #   name: "Specific Gravity"
  #   icon: mdi:flash
  #   filters:
  #     - lambda: return x;
  #   unit_of_measurement: "μS/cm"
  #   accuracy_decimals: 3
  #   state_class: "measurement"

  # EZO Circuit - RTD
  # Temperature
  - platform: ezo
    icon: mdi:thermometer-lines
    name: "Temperature"
    id: temp_ezo
    address: ${addRTD}
    unit_of_measurement: "°C"
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"
    device_class: "temperature"

  # EZO Circuit - CO2
  # Cardbon Dioxide
  - platform: ezo
    # icon: mdi:molecule-co2
    name: "Cardbon Dioxide"
    id: co2_ezo
    address: ${addCO2}
    unit_of_measurement: "ppm"
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"
    device_class: "carbon_dioxide"

  # EZO Circuit - HUM
  # Humidity
  - platform: ezo
    # icon: mdi:water-percent
    name: "Humidity"
    id: hum_ezo
    address: ${addHUM}
    unit_of_measurement: "%"
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"
    device_class: "humidity"

  # EZO Circuit - Dissolved Oxygen
  - platform: ezo
    icon: mdi:molecule
    name: "Dissolved Oxygen"
    id: do_ezo
    address: ${addDO}
    unit_of_measurement: "mg/L"
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"

text_sensor: 
  # Aquaponics Firmware Version
  - platform: template
    name: "Aquaponics Firmware"
    id: firmware_version
    icon: mdi:cellphone-arrow-down
    update_interval: 600s
    lambda: |-
      return {"${appVersion}"};
    entity_category: "diagnostic"

  # Date Updated
  - platform: version
    name: "Date Updated"
    hide_timestamp: true

  # Wifi Info
  - platform: wifi_info
    ip_address:
      name: IP Address
      icon: mdi:ip-network
    ssid:
      name: Connected SSID
      icon: mdi:wifi-star
    bssid:
      name: Connected BSSID
      icon: mdi:wifi-settings
    mac_address:
      name: Mac Address
      icon: mdi:chip


button:
  # Soft Restart
  - platform: restart
    name: "Restart"

  # EC
  # Output Parameters
  # Output Salinity
  - platform: template
    name: "EC - Output - Salinity"
    id: ec_sal
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,0");
            id(ec_ezo).send_custom("O,TDS,0");
            id(ec_ezo).send_custom("O,S,1");
            id(ec_ezo).send_custom("O,SG,0");
    entity_category: "Config"
            
  # Output Specific Gravity
  - platform: template
    name: "EC - Output - Specific Gravity"
    id: ec_sg
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,0");
            id(ec_ezo).send_custom("O,TDS,0");
            id(ec_ezo).send_custom("O,S,0");
            id(ec_ezo).send_custom("O,SG,1");
    entity_category: "Config"

  # # Output Conductivity
  # - platform: template
  #   name: "EC - Output - Conductivity"
  #   id: ec_cond
  #   on_press:
  #     then:
  #       - lambda: |-
  #           id(ec_ezo).send_custom("O,EC,1");
  #           id(ec_ezo).send_custom("O,TDS,0");
  #           id(ec_ezo).send_custom("O,S,0");
  #           id(ec_ezo).send_custom("O,SG,0");
  #   entity_category: "Config"